// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a C4 community web.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//     INFO: For extending behaviour of each generated class create another partial 
//     class in same namespace (public partial class [ClassName] { })
//     Example: 
//     public partial class BusController
//     {
//         public void Process(InputPacket packet) // extends the class with method
//         {
//         }
//
//         public void Command(OutputPacket packet) // extends the class with method
//         {
//         }
//     }
// </auto-generated>
// ------------------------------------------------------------------------------
using Gamanet.C4.SDK.Framework4.Device.Attributes;
using Gamanet.C4.SimpleInterfaces;
using Gamanet.C4.SDK.Enums.Devices;
using Gamanet.C4.SDK.Framework4.Device.Builder;
using Gamanet.C4.SimpleInterfaces.Repositories;
using System;

namespace Gamanet.C4.Driver.SimpleDriver.Devices
{
    [DeviceName("BusController")]
    [DeviceTypeId("c7b294f2-589b-48cb-998c-b6fd9220ab04", DeviceCategoryConst.BusController)]
    [ProducesLog("ee1ba72b-35c5-4887-90fa-046b989ce84d")] // DriverConnectionLost
    [ProducesLog("3a17ac37-4b44-4b6e-a7fb-1382690a2668")] // DeviceConfigurationRetrievalStarted
    [ProducesLog("0268bb1e-5f80-4303-ba0c-18cc293ba0cc")] // DeviceConfigurationRetrievalFailed
    [ProducesLog("7ecc32d2-9966-4624-8d6d-217890c07b3e")] // DeviceConfigurationRetrievalSuccessful
    [ProducesLog("2ab1583e-2c69-47b5-9eda-2adb8569577f")] // CommandFailed
    [ProducesLog("04ebc040-7671-4cd4-9515-2cfcd4c7e347")] // DriverConnectionRestored
    [ProducesLog("1ebdd67b-ac09-4451-b0d2-3ec103c150f0")] // DeviceConfigurationSendingStarted
    [ProducesLog("dcbb941a-5ed8-421b-a105-72466e9c8cb6")] // DriverStopped
    [ProducesLog("96dde25b-1584-4a57-addb-ae31ba19cf58")] // DriverInitiated
    [ProducesLog("fa937072-d6ec-409a-8cad-d9098c9f8450")] // DriverConnectedToDevice
    [ProducesLog("7cc4c2a5-fefa-4659-b4c2-da9287862bc0")] // DeviceConfigurationSendingFailed
    [ProducesLog("ddd59441-7f16-48fc-aaa0-de6a1a46f7af")] // DriverConnectingToDevice
    [ProducesLog("c104cca3-cbe5-42a2-a688-e128021033af")] // DeviceConfigurationSendingSuccessful
    [ProducesLog("3e0ab9d0-28e8-44b5-941d-f79ca520a43a")] // DriverStarted
    [ProducesLog("0d00947e-c5d1-42cd-bcf2-fd547c06ad31")] // DriverStartFailure
    [ProducesLog("94a44c12-597b-4e27-b22a-ffd9bbe57249")] // ConfigurationErrorInvalidPropertyValue
    [ProducesStatus("5ded4aa3-6243-44b5-8e77-d28f74122f3d")] // UploadingCredentials
    [ProducesStatus("fece493c-d5d8-47e6-8812-d9d165e14439")] // Initialized
    [ProducesStatus("58390eda-38bf-43a0-ba33-48cc1750b831")] // Unknown
    [ProducesStatus("f3597ee7-429a-490b-a195-6722e1556a85")] // ConnectingInProgress
    [ProducesStatus("829e9918-56b1-4c31-b689-8097fe222c65")] // Idle
    [ProducesStatus("b776690d-7b10-45b6-ab79-817eaccb085c")] // LoadingDeviceConfiguration
    [ProducesStatus("858d47ff-b5e3-469d-96f5-9c16e3081e4a")] // Starting
    [ProducesStatus("eb843b75-1e34-4588-96fd-12f00c4993c6")] // ConfigurationFailure
    [ProducesStatus("72a463fd-8004-4196-a06c-f328f8db7f42")] // Disconnected
    public partial class BusController : IDeviceBase
    {
        /// <summary>
        /// Gets the unique device type identifier.
        /// </summary>
        public static Guid DeviceTypeId { get; } = Guid.Parse("c7b294f2-589b-48cb-998c-b6fd9220ab04");

        /// <summary>
        /// Unique Id of the device
        /// </summary>
        public Guid Id => SimpleDevice.Id;
        
        /// <summary>
        /// The data representation of device.
        /// </summary>
        public SimpleDeviceV1 SimpleDevice { get; private set; }

        /// <summary>
        /// The driver context.
        /// </summary>
        public IDriverContext DriverContext { get; private set; }

        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        /// <value>The Name.</value>
        public string Name { get; set; }
        
        /// <summary>
        /// Gets or sets the Description.
        /// </summary>
        /// <value>The Description.</value>
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the IPAddress.
        /// </summary>
        /// <value>The IPAddress.</value>
        [DeviceProperty(Category="CommunicationSettings", Required=true, Protected=false, PropertyBefore="", Regex=@"")]
        public System.String IPAddress { get; set; }

        /// <summary>
        /// Gets or sets the Port.
        /// </summary>
        /// <value>The Port.</value>
        [DeviceProperty(Category="CommunicationSettings", Required=true, Protected=false, PropertyBefore="IPAddress", Regex=@"")]
        [System.ComponentModel.DefaultValue(10000)]
        public System.UInt16 Port { get; set; }

        /// <summary>
        /// Gets or sets the Timeout.
        /// </summary>
        /// <value>The Timeout.</value>
        [DeviceProperty(Category="CommunicationSettings", Required=false, Protected=false, PropertyBefore="", Regex=@"")]
        public System.TimeSpan Timeout { get; set; }

        /// <summary>
        /// Initializes this device.
        /// </summary>
        /// <param name="simpleDevice">The device data object.</param>
        /// <param name="driverContext">The driver context.</param>
        public void Initialize(SimpleDeviceV1 simpleDevice, IDriverContext driverContext)
        {
            SimpleDevice = simpleDevice;
            DriverContext = driverContext;

            OnInitialized(simpleDevice, driverContext);
        }

        /// <summary>
        /// Device was initialized, setup custom members if needed.
        /// </summary>
        partial void OnInitialized(SimpleDeviceV1 simpleDevice, IDriverContext driverContext);
    }
}