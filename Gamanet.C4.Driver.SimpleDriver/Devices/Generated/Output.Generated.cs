// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a C4 community web.
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//     
//     INFO: For extending behaviour of each generated class create another partial 
//     class in same namespace (public partial class [ClassName] { })
//     Example: 
//     public partial class Output
//     {
//         public void Process(InputPacket packet) // extends the class with method
//         {
//         }
//
//         public void Command(OutputPacket packet) // extends the class with method
//         {
//         }
//     }
// </auto-generated>
// ------------------------------------------------------------------------------
using Gamanet.C4.SDK.Framework4.Device.Attributes;
using Gamanet.C4.SimpleInterfaces;
using Gamanet.C4.SDK.Enums.Devices;
using Gamanet.C4.SDK.Framework4.Device.Builder;
using Gamanet.C4.SimpleInterfaces.Repositories;
using System;

namespace Gamanet.C4.Driver.SimpleDriver.Devices
{
    [DeviceName("Output")]
    [DeviceTypeId("cd508600-5087-4a2c-9cd2-ce71de1cd655", DeviceCategoryConst.Output)]
    [CanAddUnder(typeof(CentralUnit))]
    [HandlesCommand("c687c133-692c-4767-93f3-bc7e7c85619c")] // DeviceOn
    [HandlesCommand("9c0c21dd-68b0-4722-ae6b-f98e7df39be1")] // DeviceOff
    [ProducesLog("2ab1583e-2c69-47b5-9eda-2adb8569577f")] // CommandFailed
    [ProducesLog("95aabd18-260b-406c-a8b0-785589b399db")] // DeviceTurnedOnTimed
    [ProducesLog("e45e495a-5dd6-4d95-bacc-9f40ec9423a2")] // DuplicateAddressDetected
    [ProducesLog("be8f7075-195b-42e6-b531-a49727417d71")] // DeviceTurnedOff
    [ProducesLog("22457358-2da6-4295-afa0-ce6cebd9056b")] // DeviceTurnedOn
    [ProducesStatus("367b86c5-4b5d-4748-b2fc-7ba2f8514e70")] // Activated
    [ProducesStatus("58390eda-38bf-43a0-ba33-48cc1750b831")] // Unknown
    [ProducesStatus("829e9918-56b1-4c31-b689-8097fe222c65")] // Idle
    [ProducesStatus("eb843b75-1e34-4588-96fd-12f00c4993c6")] // ConfigurationFailure
    [ProducesStatus("42e668f6-40be-4d51-972d-f24f6afbdbe3")] // Failure
    public partial class Output : IDeviceBase
    {
        /// <summary>
        /// Gets the unique device type identifier.
        /// </summary>
        public static Guid DeviceTypeId { get; } = Guid.Parse("cd508600-5087-4a2c-9cd2-ce71de1cd655");

        /// <summary>
        /// Unique Id of the device
        /// </summary>
        public Guid Id => SimpleDevice.Id;
        
        /// <summary>
        /// The data representation of device.
        /// </summary>
        public SimpleDeviceV1 SimpleDevice { get; private set; }

        /// <summary>
        /// The driver context.
        /// </summary>
        public IDriverContext DriverContext { get; private set; }

        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        /// <value>The Name.</value>
        public string Name { get; set; }
        
        /// <summary>
        /// Gets or sets the Description.
        /// </summary>
        /// <value>The Description.</value>
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the HardwareAddress.
        /// </summary>
        /// <value>The HardwareAddress.</value>
        [DeviceProperty(Category="", Required=true, Protected=false, PropertyBefore="", Regex=@"")]
        public System.Byte HardwareAddress { get; set; }

        /// <summary>
        /// Initializes this device.
        /// </summary>
        /// <param name="simpleDevice">The device data object.</param>
        /// <param name="driverContext">The driver context.</param>
        public void Initialize(SimpleDeviceV1 simpleDevice, IDriverContext driverContext)
        {
            SimpleDevice = simpleDevice;
            DriverContext = driverContext;

            OnInitialized(simpleDevice, driverContext);
        }

        /// <summary>
        /// Device was initialized, setup custom members if needed.
        /// </summary>
        partial void OnInitialized(SimpleDeviceV1 simpleDevice, IDriverContext driverContext);
    }
}